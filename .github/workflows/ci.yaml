name: Continuous Integration

on:
  # will run both when pushing a branch and when pushing a tag
  push:

  pull_request:


env:
  COLUMNS: 120
  PUBLISH_IMAGE: ${{ (github.ref_name == 'main' || github.ref_type == 'tag') && 'TRUE' || 'FALSE'}}
  IMAGE_TAG: ${{ github.ref_name == 'main' && 'latest' || github.ref_name }}
  IMAGE_NAME: ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}

jobs:
  run_ci:
    runs-on: ubuntu-24.04
    steps:
      - name: "Grab code"
        uses: actions/checkout@v4.2.2

      - name: "Install uv"
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.18"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: "Install code with dev dependencies"
        run: uv sync --frozen --group dev

      - name: "Run ruff linter"
        run: uv run ruff check

      - name: "Run ruff formatter"
        run: uv run ruff format --check

#      # note - this does not run the end-to-end tests
#      - name: "Run tests"
#        run: uv run pytest
#

      - name: "Determine docker-related metadata"
        id: docker_metadata
        uses: docker/metadata-action@v5.7.0
        with:
          images: ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.source=https://github.com/naturalgis/seis-lab-data

      - name: "check generated docker metadata"
        run: env | grep DOCKER_METADATA_OUTPUT

#      - name: "Login to container registry"
#        if: ${{ env.PUBLISH_IMAGE == 'TRUE' }}
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ secrets.USER_FOR_REGISTRY }}
#          password: ${{ secrets.PAT_FOR_REGISTRY }}
#
#      - name: "Setup docker buildx"
#        uses: docker/setup-buildx-action@v3
#
##      # TODO: build the image, then run e2e tests and then publish
#      - name: "Build docker image"
#        uses: docker/build-push-action@v6
#        with:
#          build-args: |
#            GIT_COMMIT=${{}}
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: |
#            ${{ steps.docker_metadata.outputs.tags }}
#          labels: |
#            ${{ steps.docker_metadata.outputs.labels }}
#            org.opencontainers.image.source=https://github.com/${{}}/${{}}
