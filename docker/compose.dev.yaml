# docker compose file that can be used for development - do not use this in production!
#
# Modifications done:
# - directly provides most of the environment variables in the file, not
#   caring to protect potentially sensitive ones
# - exposes some unneeded ports to the host system, which is useful for
#   dev, testing and debugging
# - mounts code repository inside the relevant container as a bind volume

name: seis-lab-data

x-common-image: &common-image "ghcr.io/naturalgis/seis-lab-data/seis-lab-data:${CURRENT_GIT_BRANCH:-latest}"
x-auth-image: &auth-image "ghcr.io/goauthentik/server:2025.6.4"
x-auth-client-id: &auth-client-id "sld-client-id"
x-auth-client-secret: &auth-client-secret "sld-client-secret"
x-auth-redirect-url: &auth-redirect-url "http://localhost:8888/oauth2/callback"

x-common-env: &common-env
  SEIS_LAB_DATA__DEBUG: true
  SEIS_LAB_DATA__LOG_CONFIG_FILE: /home/appuser/app/dev-log-config.yml
  SEIS_LAB_DATA__MESSAGE_BROKER_DSN: redis://message-broker:6379

x-common-auth-env: &common-auth-env
  AUTHENTIK_SECRET_KEY: mysecret
  AUTHENTIK_REDIS__HOST: message-broker
  AUTHENTIK_POSTGRESQL__HOST: auth-db
  AUTHENTIK_POSTGRESQL__USER: authentik
  AUTHENTIK_POSTGRESQL__NAME: authentik
  AUTHENTIK_POSTGRESQL__PASSWORD: authentik_pass
  AUTHENTIK_WEB__PATH: /auth/
  SEIS_LAB_DATA_CLIENT_ID: *auth-client-id
  SEIS_LAB_DATA_CLIENT_SECRET: *auth-client-secret
  SEIS_LAB_DATA_REDIRECT_URIS: *auth-redirect-url

x-common-volumes: &common-volumes
  - type: bind
    source: ../src
    target: /home/appuser/app/src
  - type: bind
    source: ../pyproject.toml
    target: /home/appuser/app/pyproject.toml
  - type: bind
    source: ../tests
    target: /home/appuser/app/tests

services:

  web-gateway:
    image: traefik:v3
    ports:
      - target: 80
        published: 8888
      # traefik API and dashboard
      - target: 8080
        published: 8887
    configs:
      - source: traefik-conf
        target: /traefik.toml
    command: --configFile /traefik.toml
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock

  auth-db:
    image: postgres:17
    environment:
      POSTGRES_DB: authentik
      POSTGRES_USER: authentik
      POSTGRES_PASSWORD: authentik_pass
    healthcheck:
      test: "pg_isready -d authentik -U authentik"
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - authentik_db:/var/lib/postgresql/data

  auth-webapp:
    image: *auth-image
    command: server
    environment:
      <<: *common-auth-env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-router.rule=PathRegexp(`^/auth/`)"
      - "traefik.http.routers.auth-router.entrypoints=web"
      - "traefik.http.routers.auth-router.priority=100"
      - "traefik.http.services.auth-service.loadbalancer.server.port=9000"
    depends_on:
      auth-db:
        condition: service_healthy
      message-broker:
        condition: service_healthy

  auth-worker:
    image: *auth-image
    command: worker
    environment:
      <<: *common-auth-env
      AUTHENTIK_BOOTSTRAP_PASSWORD: admin123
      AUTHENTIK_BOOTSTRAP_TOKEN: admin123
      AUTHENTIK_BOOTSTRAP_EMAIL: akadmin@email.com
    volumes:
      - type: bind
        source: ./authentik
        target: /blueprints/custom
        read_only: true
    depends_on:
      auth-db:
        condition: service_healthy
      message-broker:
        condition: service_healthy

  message-broker:
    image: redis:8
    ports:
      - target: 6379
        published: 6379
    healthcheck:
      test: "redis-cli PING | grep PONG"

  webapp:
    image: *common-image
    environment:
      <<: *common-env
      SEIS_LAB_DATA__BIND_HOST: 0.0.0.0
      SEIS_LAB_DATA__BIND_PORT: 5000
      SEIS_LAB_DATA__PUBLIC_URL: http://localhost:8888
      SEIS_LAB_DATA__AUTH_EXTERNAL_BASE_URL: http://localhost:8888/auth
      SEIS_LAB_DATA__AUTH_INTERNAL_BASE_URL: http://auth-webapp:9000/auth
      SEIS_LAB_DATA__AUTH_CLIENT_ID: *auth-client-id
      SEIS_LAB_DATA__AUTH_CLIENT_SECRET: *auth-client-secret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sld-router.rule=PathRegexp(`^/`)"
      - "traefik.http.routers.sld-router.entrypoints=web"
      - "traefik.http.routers.sld-router.priority=10"
      - "traefik.http.services.sld-service.loadbalancer.server.port=5000"
    volumes:
      *common-volumes

  processing-worker:
    image: *common-image
    command:
      - "run-processing-worker"
    environment:
      <<: *common-env
    volumes:
      *common-volumes

  end-to-end-tester:
    image: mcr.microsoft.com/playwright/python:v1.53.0-noble
    profiles:
      - "e2e-test"
    volumes:
      - type: bind
        source: ../tests/e2e
        target: /tests/e2e
        read_only: true
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        pip install "playwright==1.53.0" pytest-playwright
        pytest --base-url=http://webapp:5000 /tests

  jupyter:
    image: *common-image
    environment:
      *common-env
    ports:
      - target: 5002
        published: 5002
    volumes:
      *common-volumes
    entrypoint: ['/bin/bash', '-c']
    command:
      - |
        uv sync --group jupyter
        uv run jupyter lab --ip=0.0.0.0 --port=5002 --no-browser --LabApp.token= --LabApp.password=


configs:

  traefik-conf:
    file: ./traefik/dev-config.toml


volumes:
  authentik_db:
