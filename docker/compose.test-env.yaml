# docker compose file that can be used in the test environment - do not use this in production!
#
# This relies on the existence of a suitable env file where the variables referenced throughout
# are defined

name: seis-lab-data

x-common-image: &common-image "${IMAGE_URL}"

x-auth-image: &auth-image "ghcr.io/goauthentik/server:2025.6.4"

x-common-env: &common-env
  SEIS_LAB_DATA__DEBUG: ${DEBUG}
  SEIS_LAB_DATA__LOG_CONFIG_FILE: ${LOG_CONFIG_FILE}
  SEIS_LAB_DATA__MESSAGE_BROKER_DSN: redis://message-broker:6379

services:

  auth-db:
    image: postgres:17
    environment:
      POSTGRES_DB: authentik
      POSTGRES_USER: authentik
      POSTGRES_PASSWORD: authentik_pass
    healthcheck:
      test: "pg_isready -d authentik -U authentik"
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - authentik_db:/var/lib/postgresql/data

  auth-webapp:
    image: *auth-image
    command: server
    environment:
      <<: *common-auth-env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-router.rule=PathRegexp(`^/auth/`)"
      - "traefik.http.routers.auth-router.entrypoints=web"
      - "traefik.http.routers.auth-router.priority=100"
      - "traefik.http.services.auth-service.loadbalancer.server.port=9000"
    depends_on:
      auth-db:
        condition: service_healthy
      message-broker:
        condition: service_healthy

  auth-worker:
    image: *auth-image
    command: worker
    environment:
      <<: *common-auth-env
      AUTHENTIK_BOOTSTRAP_PASSWORD: admin123
      AUTHENTIK_BOOTSTRAP_TOKEN: admin123
      AUTHENTIK_BOOTSTRAP_EMAIL: akadmin@email.com
    volumes:
      - type: bind
        source: ./authentik
        target: /blueprints/custom
        read_only: true
    depends_on:
      auth-db:
        condition: service_healthy
      message-broker:
        condition: service_healthy

  message-broker:
    image: redis:8
    restart: unless-stopped
    healthcheck:
      test: "redis-cli PING | grep PONG"

  webapp:
    image: *common-image
    environment:
      <<: *common-env
      SEIS_LAB_DATA__BIND_HOST: 0.0.0.0
      SEIS_LAB_DATA__BIND_PORT: 5000
      SEIS_LAB_DATA__PUBLIC_URL: ${WEBAPP_PUBLIC_URL}
    labels:
      - exposed.outside=true
      - traefik.enable=true
      - traefik.http.services.sld-service.loadbalancer.server.port=5000
      - traefik.http.routers.sld-router.rule=Host(`seis-lab-data.naturalgis.pt`)
      - traefik.http.routers.sld-router.entrypoints=web
      - traefik.http.routers.sld-router.service=sld-service
    restart: unless-stopped
    networks:
      - traefik-network
      - default

  processing-worker:
    image: *common-image
    command:
      - "run-processing-worker"
    environment:
      <<: *common-env
    restart: unless-stopped

networks:
  traefik-network:
    external: true
    name: front

secrets:
  auth-client-id:
    file: /opt/seis-lab-data/auth-client-id.txt
  auth-client-secret:
    file: /opt/seis-lab-data/auth-client-id.txt
  auth-db-user:
    file: /opt/seis-lab-data/auth-db-user.txt
  auth-db-password:
    file: /opt/seis-lab-data/auth-db-password.txt