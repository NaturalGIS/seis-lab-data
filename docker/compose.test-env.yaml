# docker compose file that can be used in the test environment - do not use this in production!
#
# This relies on the existence of a suitable env file where the variables referenced throughout
# are defined

name: seis-lab-data

x-common-image: &common-image "${IMAGE_URL}"

x-auth-image: &auth-image "ghcr.io/goauthentik/server:2025.6.4"
x-auth-redirect-url: &auth-redirect-url "http://localhost:8888/oauth2/callback"

x-common-env: &common-env
  SEIS_LAB_DATA__DEBUG: ${DEBUG}
  SEIS_LAB_DATA__LOG_CONFIG_FILE: ${LOG_CONFIG_FILE}
  SEIS_LAB_DATA__MESSAGE_BROKER_DSN: redis://message-broker:6379

x-common-secrets: &common-secrets
  secrets:
    - source: sld-database-dsn
      target: SEIS_LAB_DATA__database_dsn

x-common-auth-env: &common-auth-env
  AUTHENTIK_EMAIL__HOST: smtp.postmarkapp.com
  AUTHENTIK_EMAIL__PORT: 587
  AUTHENTIK_EMAIL__USERNAME: file:///run/secrets/auth-email-username
  AUTHENTIK_EMAIL__PASSWORD: file:///run/secrets/auth-email-password
  AUTHENTIK_EMAIL__USE_TLS: true
  AUTHENTIK_EMAIL__TIMEOUT: 10
  AUTHENTIK_EMAIL__FROM: auth@seis-lab-data.naturalgis.pt
  AUTHENTIK_LOG_LEVEL: warning
  AUTHENTIK_REDIS__HOST: message-broker
  AUTHENTIK_SECRET_KEY: file:///run/secrets/auth-secret-key
  AUTHENTIK_POSTGRESQL__HOST: auth-db
  AUTHENTIK_POSTGRESQL__USER: sld_auth_user
  AUTHENTIK_POSTGRESQL__NAME: authentik
  AUTHENTIK_POSTGRESQL__PASSWORD: file:///run/secrets/auth-db-password
  AUTHENTIK_WEB__PATH: /auth/
  SEIS_LAB_DATA_REDIRECT_URI: *auth-redirect-url


services:

  auth-db:
    image: postgres:17
    environment:
      POSTGRES_DB: authentik
      POSTGRES_USER: sld_auth_user
      POSTGRES_PASSWORD_FILE: /run/secrets/auth-db-password
    healthcheck:
      test: "pg_isready -d authentik"
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - authentik_db:/var/lib/postgresql/data
    secrets:
      - auth-db-password

  auth-webapp:
    image: *auth-image
    command: server
    environment:
      <<: *common-auth-env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-router.rule=PathRegexp(`^/auth/`)"
      - "traefik.http.routers.auth-router.entrypoints=web"
      - "traefik.http.routers.auth-router.priority=100"
      - "traefik.http.services.auth-service.loadbalancer.server.port=9000"
    depends_on:
      auth-db:
        condition: service_healthy
      message-broker:
        condition: service_healthy
    secrets:
      - auth-db-password
      - auth-secret-key
      - auth-email-username
      - auth-email-password

  auth-worker:
    image: *auth-image
    command: worker
    environment:
      <<: *common-auth-env
      AUTHENTIK_BOOTSTRAP_PASSWORD: file:///run/secrets/auth-bootstrap-password
      AUTHENTIK_BOOTSTRAP_TOKEN: file:///run/secrets/auth-bootstrap-token
      AUTHENTIK_BOOTSTRAP_EMAIL: file:///run/secrets/auth-bootstrap-email
    volumes:
      - type: bind
        source: ./authentik/sld-auth-blueprint-test-env.yaml
        target: /blueprints/custom/sld-auth-blueprint-test-env.yaml
        read_only: true
    depends_on:
      auth-db:
        condition: service_healthy
      message-broker:
        condition: service_healthy
    secrets:
      - auth-db-password
      - auth-secret-key
      - auth-email-username
      - auth-email-password
      - auth-bootstrap-password
      - auth-bootstrap-token
      - auth-bootstrap-email

  message-broker:
    image: redis:8
    restart: unless-stopped
    healthcheck:
      test: "redis-cli PING | grep PONG"

  db:
    image: postgis/postgis:17-3.5-alpine
    environment:
      POSTGRES_DB: seis_lab_data
      POSTGRES_USER: sld
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
    healthcheck:
      test: "pg_isready -d seis_lab_data -U sld"
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    secrets:
      - db-password
    volumes:
      - db:/var/lib/postgresql/data

  webapp:
    image: *common-image
    environment:
      <<: *common-env
      SEIS_LAB_DATA__BIND_HOST: 0.0.0.0
      SEIS_LAB_DATA__BIND_PORT: 5000
      SEIS_LAB_DATA__PUBLIC_URL: ${WEBAPP_PUBLIC_URL}
    labels:
      - exposed.outside=true
      - traefik.enable=true
      - traefik.http.services.sld-service.loadbalancer.server.port=5000
      - traefik.http.routers.sld-router.rule=Host(`seis-lab-data.naturalgis.pt`)
      - traefik.http.routers.sld-router.entrypoints=web
      - traefik.http.routers.sld-router.service=sld-service
    <<: *common-secrets
    restart: unless-stopped
    networks:
      - traefik-network
      - default

  processing-worker:
    image: *common-image
    command:
      - "run-processing-worker"
    environment:
      <<: *common-env
    <<: *common-secrets
    restart: unless-stopped

networks:
  traefik-network:
    external: true
    name: front

volumes:
  authentik_db:
  db:

secrets:
  auth-bootstrap-email:
    file: /opt/seis-lab-data/secrets/auth-bootstrap-email.txt
  auth-bootstrap-password:
    file: /opt/seis-lab-data/secrets/auth-bootstrap-password.txt
  auth-bootstrap-token:
    file: /opt/seis-lab-data/secrets/auth-bootstrap-token.txt
  auth-client-id:
    file: /opt/seis-lab-data/secrets/auth-client-id.txt
  auth-client-secret:
    file: /opt/seis-lab-data/secrets/auth-client-secret.txt
  auth-db-password:
    file: /opt/seis-lab-data/secrets/auth-db-password.txt
  auth-email-password:
    file: /opt/seis-lab-data/secrets/auth-email-password.txt
  auth-email-username:
    file: /opt/seis-lab-data/secrets/auth-email-username.txt
  auth-secret-key:
    file: /opt/seis-lab-data/secrets/auth-secret-key.txt
  db-password:
    file: /opt/seis-lab-data/secrets/db-password.txt
  sld-database-dsn:
    file: /opt/seis-lab-data/secrets/sld-db-dsn.txt
