when:
  - event: deployment
  - event: manual

steps:
  - name: greet
    image: ubuntu:24.04
    commands: |
      echo "Hello World, I would be running as the actual deployment but instead I'm here to show the current env"
      env
  - name: extract-deployment-payload
    image: ubuntu:24.04
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands: |
      apt update
      apt install --yes --no-install-recommends \
        jq
      DEPLOYMENT_JSON=$(curl -s "${CI_PIPELINE_FORGE_URL}")
      IMAGE_URL=$(echo "${DEPLOYMENT_JSON}" | jq -r '.payload.image_url')
      ENVIRONMENT=$(echo "$DEPLOYMENT_JSON" | jq -r '.environment // "not_found"')
      TASK=$(echo "$DEPLOYMENT_JSON" | jq -r '.task // "not_found"')

      echo "export IMAGE_URL='$IMAGE_URL'" > /tmp/deployment_vars.sh
      echo "export DEPLOY_ENVIRONMENT='$ENVIRONMENT'" >> /tmp/deployment_vars.sh

  - name: deploy compose stack
    image: docker:24-cli
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/seis-lab-data:/opt/seis-lab-data
    commands: |
      echo "=== Deploying Application ==="
      source /tmp/deployment_vars.sh

      # Install git to clone the repo
      apk add --no-cache git

      # Clone the repository to get the latest compose file
      echo "Cloning repository..."
      git clone https://github.com/NaturalGIS/seis-lab-data.git /tmp/repo
      cd /tmp/repo

      # Checkout the specific commit that triggered the deployment
      git checkout ${CI_COMMIT_SHA}

      # Copy the compose file to the host directory
      echo "Copying compose file to host..."
      cp docker/compose.test-env.yaml /opt/seis-lab-data/compose.yaml

      # Verify the env file exists on the host
      if [ ! -f /opt/seis-lab-data/.env ]; then
        echo "ERROR: .env file not found at /opt/seis-lab-data/.env"
        echo "Please ensure the environment file is present on the host"
        exit 1
      fi

      echo "Environment file found:"
      ls -la /opt/seis-lab-data/.env

      # Change to the deployment directory
      cd /opt/seis-lab-data

      # Show what we're working with
      echo "Files in deployment directory:"
      ls -la

      # Pull the latest image
      echo "Pulling latest image: $IMAGE_URL"
      docker pull ${IMAGE_URL}

      # Stop existing containers (if any)
      echo "Stopping existing containers..."
      docker-compose -f compose.test-env.yaml down || true

      # Start the new deployment
      echo "Starting deployment..."
      docker-compose -f compose.test-env.yaml up -d

      # Show the running containers
      echo "Deployment complete. Running containers:"
      docker-compose -f compose.test-env.yaml ps

      # Show container logs for verification
      echo "Container logs:"
      docker-compose -f compose.test-env.yaml logs --tail=20
