"""initial

Revision ID: 0611a534dd95
Revises:
Create Date: 2025-08-28 10:47:55.249762

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  # noqa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "0611a534dd95"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("DRAFT", "PUBLISHED", name="marinecampaignstatus").create(op.get_bind())
    op.create_table(
        "marinecampaign",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "owner", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False
        ),
        sa.Column("name", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(
                "DRAFT", "PUBLISHED", name="marinecampaignstatus", create_type=False
            ),
            nullable=False,
        ),
        sa.Column("is_valid", sa.Boolean(), nullable=False),
        sa.Column("links", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_marinecampaign_owner"), "marinecampaign", ["owner"], unique=False
    )
    op.create_table(
        "surveymission",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "owner", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False
        ),
        sa.Column("name", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("marine_campaign_id", sa.Uuid(), nullable=False),
        sa.Column("links", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(
            ["marine_campaign_id"],
            ["marinecampaign.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_surveymission_owner"), "surveymission", ["owner"], unique=False
    )
    op.create_table(
        "surveyrelatedrecord",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "owner", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False
        ),
        sa.Column("name", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("survey_mission_id", sa.Uuid(), nullable=False),
        sa.Column("links", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(
            ["survey_mission_id"],
            ["surveymission.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_surveyrelatedrecord_owner"),
        "surveyrelatedrecord",
        ["owner"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_surveyrelatedrecord_owner"), table_name="surveyrelatedrecord"
    )
    op.drop_table("surveyrelatedrecord")
    op.drop_index(op.f("ix_surveymission_owner"), table_name="surveymission")
    op.drop_table("surveymission")
    op.drop_index(op.f("ix_marinecampaign_owner"), table_name="marinecampaign")
    op.drop_table("marinecampaign")
    sa.Enum("DRAFT", "PUBLISHED", name="marinecampaignstatus").drop(op.get_bind())
    # ### end Alembic commands ###
